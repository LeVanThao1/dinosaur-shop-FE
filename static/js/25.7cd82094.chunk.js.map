{"version":3,"sources":["pages/ResetPassword/index.js","utils/validation/index.js"],"names":["Reset","props","token","useParams","history","useHistory","useState","password","cf_password","data","setData","handleChangeInput","e","target","name","value","handleResetPass","a","isLength","notifiError","isMatch","axios","post","headers","Authorization","res","notifiSuccess","msg","push","response","className","htmlFor","type","id","onChange","onClick","isEmpty","isEmail","email","test","length"],"mappings":"oPA6EeA,UAnEf,SAAeC,GAAQ,IACdC,EAAUC,cAAVD,MACFE,EAAUC,cAFK,EAGGC,mBAAS,CAChCC,SAAU,GACVC,YAAa,KALO,mBAGdC,EAHc,KAGRC,EAHQ,KAQfC,EAAoB,SAACC,GAAO,IAAD,IACRA,EAAEC,OAAlBC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MACdL,EAAQ,2BAAKD,GAAN,uBAAaK,EAAOC,GAApB,oBAAgC,IAAhC,wBAA6C,IAA7C,MAGFC,EAAe,uCAAG,4BAAAC,EAAA,0DACnBC,YAAST,EAAKF,UADK,yCAEfY,YAAY,4CAFG,UAIlBC,YAAQX,EAAKF,SAAUE,EAAKD,aAJV,yCAKfW,YAAY,4BALG,gCAOJE,IAAMC,KACvB,qCACA,CAAEf,SAAUE,EAAKF,UACjB,CACCgB,QAAS,CAAEC,cAAetB,KAXN,OAOhBuB,EAPgB,OActBC,YAAcD,EAAIhB,KAAKkB,KACvBvB,EAAQwB,KAAK,UAfS,kDAiBtBT,YAAY,KAAIU,SAASpB,KAAKkB,KAjBR,0DAAH,qDAqBrB,OACC,sBAAKG,UAAU,UAAf,UACC,qDAEA,sBAAKA,UAAU,eAAf,UACC,sBAAKA,UAAU,WAAf,UACC,uBAAOC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACCC,KAAK,WACLlB,KAAK,WACLmB,GAAG,WACHlB,MAAON,EAAKF,SACZ2B,SAAUvB,OAGZ,sBAAKmB,UAAU,cAAf,UACC,uBAAOC,QAAQ,cAAf,8BACA,cAAC,IAAD,CACCC,KAAK,WACLlB,KAAK,cACLmB,GAAG,cACHlB,MAAON,EAAKD,YACZ0B,SAAUvB,OAGZ,qBAAKmB,UAAU,YAAf,SACC,cAAC,IAAD,CAAQK,QAASnB,EAAjB,sC,uDCtEL,wIAAO,IAAMoB,EAAU,SAACrB,GACvB,OAAKA,GAIOsB,EAAU,SAACC,GAGvB,MADW,4JACDC,KAAKD,IAGHpB,EAAW,SAACX,GACxB,OAAIA,EAASiC,OAAS,GAIVpB,EAAU,SAACb,EAAUC,GACjC,OAAID,IAAaC","file":"static/js/25.7cd82094.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { notifiError, notifiSuccess } from \"../../utils/notification\";\nimport { isLength, isMatch } from \"../../utils/validation\";\nimport axios from \"axios\";\nimport { Button, Input } from \"antd\";\nimport \"./style.scss\";\nReset.propTypes = {};\n\nfunction Reset(props) {\n\tconst { token } = useParams();\n\tconst history = useHistory();\n\tconst [data, setData] = useState({\n\t\tpassword: \"\",\n\t\tcf_password: \"\",\n\t});\n\n\tconst handleChangeInput = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetData({ ...data, [name]: value, err: \"\", success: \"\" });\n\t};\n\n\tconst handleResetPass = async () => {\n\t\tif (isLength(data.password))\n\t\t\treturn notifiError(\"Password must be at least 6 characters.\");\n\n\t\tif (!isMatch(data.password, data.cf_password))\n\t\t\treturn notifiError(\"Password did not match.\");\n\t\ttry {\n\t\t\tconst res = await axios.post(\n\t\t\t\t\"http://localhost:3001/user/resetpw\",\n\t\t\t\t{ password: data.password },\n\t\t\t\t{\n\t\t\t\t\theaders: { Authorization: token },\n\t\t\t\t}\n\t\t\t);\n\t\t\tnotifiSuccess(res.data.msg);\n\t\t\thistory.push(\"/login\");\n\t\t} catch (err) {\n\t\t\tnotifiError(err.response.data.msg);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"fg_pass\">\n\t\t\t<h2>Reset Your Password</h2>\n\n\t\t\t<div className=\"row-password\">\n\t\t\t\t<div className=\"password\">\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={data.password}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"cf-password\">\n\t\t\t\t\t<label htmlFor=\"cf_password\">Confirm Password</label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"cf_password\"\n\t\t\t\t\t\tid=\"cf_password\"\n\t\t\t\t\t\tvalue={data.cf_password}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-pw\">\n\t\t\t\t\t<Button onClick={handleResetPass}>Reset Password</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Reset;\n","export const isEmpty = (value) => {\n\tif (!value) return true;\n\treturn false;\n};\n\nexport const isEmail = (email) => {\n\t// eslint-disable-next-line\n\tconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\treturn re.test(email);\n};\n\nexport const isLength = (password) => {\n\tif (password.length < 8) return true;\n\treturn false;\n};\n\nexport const isMatch = (password, cf_password) => {\n\tif (password === cf_password) return true;\n\treturn false;\n};\n"],"sourceRoot":""}