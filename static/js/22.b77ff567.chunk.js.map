{"version":3,"sources":["pages/ForgetPassword/index.js","utils/validation/index.js"],"names":["Forget","props","useState","email","setEmail","forgotPassword","a","isEmail","notifiError","axios","post","res","notifiSuccess","data","msg","response","className","htmlFor","type","name","id","value","onChange","e","target","onClick","isEmpty","test","isLength","password","length","isMatch","cf_password"],"mappings":"8NAoDeA,UA5Cf,SAAgBC,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,KAOhBC,EAAc,uCAAG,4BAAAC,EAAA,yDACjBC,YAAQJ,GADS,yCAGdK,YAAY,kBAHE,gCAKHC,IAAMC,KACvB,6CACA,CACCP,UARmB,OAKfQ,EALe,OAWrBC,YAAcD,EAAIE,KAAKC,KAXF,gDAarBN,YAAY,KAAIO,SAASF,KAAKC,KAbT,yDAAH,qDAgBpB,OACC,sBAAKE,UAAU,UAAf,UACC,uDAEA,sBAAKA,UAAU,aAAf,UACC,uBAAOC,QAAQ,QAAf,sCACA,cAAC,IAAD,CACCC,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,MAAOlB,EACPmB,SA/BsB,SAACC,GAC1BnB,EAASmB,EAAEC,OAAOH,aAiCjB,qBAAKL,UAAU,aAAf,SACC,cAAC,IAAD,CAAQS,QAASpB,EAAjB,sC,uDC9CJ,wIAAO,IAAMqB,EAAU,SAACL,GACvB,OAAKA,GAIOd,EAAU,SAACJ,GAGvB,MADW,4JACDwB,KAAKxB,IAGHyB,EAAW,SAACC,GACxB,OAAIA,EAASC,OAAS,GAIVC,EAAU,SAACF,EAAUG,GACjC,OAAIH,IAAaG","file":"static/js/22.b77ff567.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport { isEmail } from \"../../utils/validation\";\nimport axios from \"axios\";\nimport { notifiSuccess, notifiError } from \"../../utils/notification\";\nimport { Button, Input } from \"antd\";\nForget.propTypes = {};\n\nfunction Forget(props) {\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst handleChangeInput = (e) => {\n\t\tsetEmail(e.target.value);\n\t};\n\n\tconst forgotPassword = async () => {\n\t\tif (!isEmail(email))\n\t\t\t// return setData({ ...data, err: \"Invalid emails.\", success: \"\" });\n\t\t\treturn notifiError(\"Invalid email\");\n\t\ttry {\n\t\t\tconst res = await axios.post(\n\t\t\t\t\"http://localhost:3001/user/forgot_password\",\n\t\t\t\t{\n\t\t\t\t\temail,\n\t\t\t\t}\n\t\t\t);\n\t\t\tnotifiSuccess(res.data.msg);\n\t\t} catch (err) {\n\t\t\tnotifiError(err.response.data.msg);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"fg_pass\">\n\t\t\t<h2>Forgot Your Password?</h2>\n\n\t\t\t<div className=\"row-forget\">\n\t\t\t\t<label htmlFor=\"email\">Enter your email address</label>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"btn-forget\">\n\t\t\t\t<Button onClick={forgotPassword}>Verify your email</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Forget;\n","export const isEmpty = (value) => {\n\tif (!value) return true;\n\treturn false;\n};\n\nexport const isEmail = (email) => {\n\t// eslint-disable-next-line\n\tconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\treturn re.test(email);\n};\n\nexport const isLength = (password) => {\n\tif (password.length < 8) return true;\n\treturn false;\n};\n\nexport const isMatch = (password, cf_password) => {\n\tif (password === cf_password) return true;\n\treturn false;\n};\n"],"sourceRoot":""}